#!/usr/bin/env node

var argv = require('minimist')(process.argv.slice(2));

var input = argv._[0],
    dest = argv._[1];

var die = process.exit.bind(process);

if (!input) {
  console.log('usage: diff-sites FILE [OUTPUT]');
  die(1);
}

var fs = require('fs-extra'),
    path = require('path'),
    jsyaml = require('js-yaml'),
    spawn = require('child_process').spawn;

var buffer = fs.readFileSync(input).toString();

try {
  var sequence = jsyaml.safeLoad(buffer, { filename: input });
} catch (e) {
  console.log(e.message || e.toString());
  die(1);
}

var builder = require('../lib/builder');

var destDir = path.join(process.cwd(), dest || 'generated');

var jsonId = path.basename(input).replace(/\.\w+$/, ''),
    jsonFile = path.join(destDir, jsonId, 'index.json');

console.log('Load ' + input);

fs.outputJsonSync(jsonFile, builder(sequence));

process.env.DIFF_JSON = jsonFile;
process.env.DIFF_LIB_DIR = path.join(__dirname, '../lib/casper');
process.env.DIFF_SCREEN_DIR = path.join(destDir, 'screenshots');
process.env.DIFF_LOG_LEVEL = argv.log === true ? 'info' : argv.log || 'error';
process.env.DIFF_LOG_VERBOSE = argv.verbose === true ? true : '';
process.env.DIFF_USER_AGENT = argv.ua || '';

var start = new Date();

var child = spawn('casperjs', [
  path.join(__dirname, '../lib/casper/bootstrap.js'),
  '--ignore-ssl-errors=true',
  '--ssl-protocol=any'
]);

child.stdout.on('data', function(data) {
  console.log(data.toString());
});

child.on('close', function(code) {
  var diff = (new Date()) - start;

  if (diff > 1000) {
    diff = (diff / 1000).toFixed() + 's';
  } else {
    diff = diff + 'ms';
  }

  console.log('Done in ' + diff);

  die(code);
});
