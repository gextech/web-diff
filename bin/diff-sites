#!/usr/bin/env node

var argv = require('minimist')(process.argv.slice(2));

var files = argv._,
    dest = argv.dest || 'generated';

var die = process.exit.bind(process);

if (!files.length) {
  console.log('usage: diff-sites FILE1 [FILE2] [...] [OPTIONS]');
  die(1);
}

var fs = require('fs-extra'),
    path = require('path'),
    temp = require('temp-write'),
    jsyaml = require('js-yaml'),
    spawn = require('child_process').spawn;

var buildTests = require('../lib/builder');

console.log('# Loading ' + files.join(', '));

var sequence = files.map(function(file) {
  var buffer = fs.readFileSync(file).toString();

  try {
    var data = jsyaml.safeLoad(buffer, { filename: file });
  } catch (e) {
    console.log(e.message || e.toString());
    die(1);
  }

  return data;
});

var destDir = path.join(process.cwd(), dest || 'generated'),
    jsonFile = temp.sync(JSON.stringify(buildTests(sequence)), 'test-' + +(new Date()) + '.json');

process.env.DIFF_JSON = jsonFile;
process.env.DIFF_LIB_DIR = path.join(__dirname, '../lib/casper');
process.env.DIFF_SCREEN_DIR = path.join(destDir, 'screenshots');
process.env.DIFF_LOG_LEVEL = argv.log === true ? 'info' : argv.log || '';
process.env.DIFF_LOG_VERBOSE = argv.verbose === true ? true : '';
process.env.DIFF_USER_AGENT = argv.ua || '';

var child = spawn('casperjs', [
  path.join(__dirname, '../lib/casper/bootstrap.js'),
  '--ignore-ssl-errors=true',
  '--ssl-protocol=any'
]);

var err;

child.stdout.on('data', function(data) {
  if (/^not ok\b/.test(data)) {
    err = 1;
  }
}).pipe(process.stdout);

child.on('close', function(exitCode) {
  try {
    fs.unlinkSync(jsonFile);
  } catch (e) {}

  die(exitCode || err);
});
